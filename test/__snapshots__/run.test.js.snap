// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`run() should emit a start event of expected shape 1`] = `
Array [
  "start",
  Object {
    "config": Object {
      "cwd": "/updtr/test/cwd",
      "exclude": Array [],
      "registry": undefined,
      "save": "smart",
      "test": undefined,
      "updateTo": "latest",
      "use": "npm",
    },
  },
]
`;

exports[`run() when there are just breaking updates should emit an end event of expected shape and return the results 1`] = `
Array [
  "end",
  Object {
    "config": Object {
      "cwd": "/updtr/test/cwd",
      "exclude": Array [],
      "registry": undefined,
      "save": "smart",
      "test": undefined,
      "updateTo": "latest",
      "use": "npm",
    },
    "results": Array [
      Object {
        "name": "updtr-test-module-1",
        "rollbackTo": "1.0.0",
        "success": true,
        "updateTo": "2.0.0",
      },
      Object {
        "name": "updtr-test-module-2",
        "rollbackTo": "1.0.0",
        "success": false,
        "updateTo": "2.0.0",
      },
    ],
  },
]
`;

exports[`run() when there are no outdated dependencies should emit an end event of expected shape and return the results 1`] = `
Array [
  "end",
  Object {
    "config": Object {
      "cwd": "/updtr/test/cwd",
      "exclude": Array [],
      "registry": undefined,
      "save": "smart",
      "test": undefined,
      "updateTo": "latest",
      "use": "npm",
    },
    "results": Array [],
  },
]
`;

exports[`run() when there are two non-breaking updates and the update is not ok should emit an end event of expected shape and return the results 1`] = `
Array [
  "end",
  Object {
    "config": Object {
      "cwd": "/updtr/test/cwd",
      "exclude": Array [],
      "registry": undefined,
      "save": "smart",
      "test": undefined,
      "updateTo": "latest",
      "use": "npm",
    },
    "results": Array [
      Object {
        "name": "updtr-test-module-1",
        "rollbackTo": "2.0.0",
        "success": false,
        "updateTo": "2.1.1",
      },
      Object {
        "name": "updtr-test-module-2",
        "rollbackTo": "2.0.0",
        "success": true,
        "updateTo": "2.1.1",
      },
    ],
  },
]
`;

exports[`run() when there are two non-breaking updates and the update is ok should emit an end event of expected shape and return the results 1`] = `
Array [
  "end",
  Object {
    "config": Object {
      "cwd": "/updtr/test/cwd",
      "exclude": Array [],
      "registry": undefined,
      "save": "smart",
      "test": undefined,
      "updateTo": "latest",
      "use": "npm",
    },
    "results": Array [
      Object {
        "name": "updtr-test-module-1",
        "rollbackTo": "2.0.0",
        "success": true,
        "updateTo": "2.1.1",
      },
      Object {
        "name": "updtr-test-module-2",
        "rollbackTo": "2.0.0",
        "success": true,
        "updateTo": "2.1.1",
      },
    ],
  },
]
`;

exports[`run() when there is just one non-breaking update should emit an end event of expected shape and return the results 1`] = `
Array [
  "end",
  Object {
    "config": Object {
      "cwd": "/updtr/test/cwd",
      "exclude": Array [],
      "registry": undefined,
      "save": "smart",
      "test": undefined,
      "updateTo": "latest",
      "use": "npm",
    },
    "results": Array [
      Object {
        "name": "updtr-test-module-1",
        "rollbackTo": "2.0.0",
        "success": true,
        "updateTo": "2.1.1",
      },
    ],
  },
]
`;

exports[`run() when updateTo is "non-breaking" and the tests are ok should finish incomplete results 1`] = `
Array [
  Object {
    "name": "updtr-test-module-1",
    "rollbackTo": "1.0.0",
    "success": true,
    "updateTo": "2.0.0",
  },
]
`;
